---
on:
  workflow_call:
    inputs:
      push:
        description: Set to true to push images to registries
        default: false
        required: false
        type: boolean
      release_stream:
        type: string
        description: Set the release stream (latest, dev, ...)
        required: false
        default: dev
      registry_ghcr:
        description: github container registry
        default: "ghcr.io/cisco-open/app-simulator"
        required: false
        type: string
jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        image:
          - context: ./src/loaders/curl
            name: loaders-curl
          - context: ./src/services/java
            name: services-java
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Bump version
        # Only bump the version if the release stream is not 'latest'
        # This way we make sure that released versions are fixed to their version
        # and that 'dev' or other non stable releases do not overwrite.
        if: ${{ inputs.release_stream != 'latest' }}
        run: ./scripts/bumpversion.sh --patch
      - name: Read version from .version file
        id: version
        run: |
          echo "version=$(cat .version)" >> $GITHUB_OUTPUT
      - name: Log into GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: cisco-service
          password: ${{ secrets.PACKAGE_PUBLICATION_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64, amd64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push images
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          tags: |
            ${{ inputs.registry_ghcr }}-${{ matrix.image.name }}:${{ steps.version.outputs.version }}
            ${{ inputs.registry_ghcr }}-${{ matrix.image.name }}:${{ inputs.release_stream }}
          cache-from: type=gha
          cache-to: type=gha
