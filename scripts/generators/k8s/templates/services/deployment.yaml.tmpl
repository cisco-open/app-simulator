apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ service_name }}
  labels:
    app: {{ service_name }}
    service: {{ service_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ service_name }}
      service: {{ service_name }}
  template:
    metadata:
      labels:
        app: {{ service_name }}
        service: {{ service_name }}
    spec:
      containers:
      - name: app-container
{%- if service_type == 'java' %}
        image: astoklas177/apmgamek8s:java
{%- elif service_type == 'nodejs' %}
        image: astoklas177/apmgamek8s:nodejs
{%- elif service_type == 'python' %}
        image: astoklas177/apmgamek8s:python
{%- elif service_type == 'dotnet' %}
        image: astoklas177/apmgamek8s:dotnetcore
{%- elif service_type == 'php' %}
        image: astoklas177/apmgamek8s:php
{%- endif %}
        imagePullPolicy: Always
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['service']
        ports:
        - containerPort: {{ service_port }}
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        volumeMounts: 
          - name: config-json
            mountPath: /config.json
            subPath: config.json
      volumes:
        - name: config-json
          configMap:
            name: {{ service_name }}-json
